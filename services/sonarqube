#!/bin/sh
CURRDIR="$(dirname $0)";
COMMAND_EXISTS="${CURRDIR}/../utils/command-exists";
CLEAR_DATA_VOLUME="${CURRDIR}/../utils/clear-data-volume";
if [ "$(${COMMAND_EXISTS} docker)" != "1" ]; then
  printf -- 'docker is not installed.\n';
  exit 1;
fi;

CURRENT_TIMESTAMP="$(date +'%Y%M%d_%H%m%S')";
SVC_VERSION='7.1-alpine';
SVC_VERSION_UNDERSCORED="$(printf -- "${SVC_VERSION}" | sed -e 's|\.|_|g')";
CONTAINER_NAME="sonarqube_${SVC_VERSION_UNDERSCORED}_${CURRENT_TIMESTAMP}";
DATA_VOLUME_PATH="${HOME}/.zscripts/data/${CONTAINER_NAME}";
SVC_UI_PORT=9000;
SVC_SERVER_PORT=9092;

mkdir -p "${DATA_VOLUME_PATH}";

printf -- '-----------------------------------------------\n';
printf -- '  ___  ___  _  _   _   ___  ___  _   _ ___ ___ \n';
printf -- ' / __|/ _ \| \| | /_\ | _ \/ _ \| | | | _ ) __|\n';
printf -- ' \__ \ (_) | .` |/ _ \|   / (_) | |_| | _ \ _| \n';
printf -- ' |___/\___/|_|\_/_/ \_\_|_\\__\_\\___/|___/___|\n';
printf -- '                                               \n';
printf -- '-----------------------------------------------\n';

HOST_PORT_UI="$1";
if [ "${HOST_PORT_UI}" = "" ]; then HOST_PORT_UI=${SVC_UI_PORT}; fi;
HOST_PORT_SERVER="$2";
if [ "${HOST_PORT_SERVER}" = "" ]; then HOST_PORT_SERVER=${SVC_SERVER_PORT}; fi;

printf -- "HOST_PORT_UI:     ${HOST_PORT_UI}\n";
printf -- "HOST_PORT_SERVER: ${HOST_PORT_SERVER}\n";
printf -- "DATA_VOLUME_PATH: ${DATA_VOLUME_PATH}\n";
printf -- '-----------------------------------------------\n';

docker run \
  --publish "${HOST_PORT_UI}:${SVC_UI_PORT}" \
  --publish "${HOST_PORT_SERVER}:${SVC_SERVER_PORT}" \
  --volume "${DATA_VOLUME_PATH}:/opt/sonarqube/data" \
  --name "${CONTAINER_NAME}" \
  sonarqube:"${SVC_VERSION}" \
;

${CLEAR_DATA_VOLUME} "${DATA_VOLUME_PATH}";